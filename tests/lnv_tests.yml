---
- name: Get VxLAN Data
  command: vxrdctl vxlans -j
  register: vxrd_vxlans_output
  when: vxrd[ansible_hostname] is defined

- name: Process VxLAN Data
  set_fact:
    configured_vxlans: "{{vxrd_vxlans_output.stdout | from_json}}"
  when: vxrd[ansible_hostname] is defined

# This ensures that all the expected VNIs are configured.
# Does not check if extra VNIs are configured
- name: Validate VNIs
  assert:
    that:
      - ('{{item}}') in configured_vxlans.keys()
  with_items: "{{vxrd.vnis}}"
  when: vxrd[ansible_hostname] is defined

# This will look at each VNI configured on the box and validate
# that the service node is configured as expected
- name: Validate Service Node
  assert:
    that:
      - configured_vxlans[{{item}}|string].svcnodeip == vxrd.service_node
  with_items: "{{configured_vxlans.keys()}}"
  when: vxrd[ansible_hostname] is defined

# This validates that the list of head end replication end points
# Exactly matches the list of expected head end replication endpoints
- name: Validate Replication Endpoints
  assert:
    that:
      - configured_vxlans[{{item}}|string].hrep_addrs|sort == vxrd[ansible_hostname]|sort
  with_items: "{{configured_vxlans.keys()}}"
  when: vxrd[ansible_hostname] is defined

- name: Get Service Node Data
  command: vxsndctl show -j
  register: vxsndctl_output
  when: vxsnd[ansible_hostname] is defined

- name: Process Service Node Data
  set_fact:
    configured_vxsnd: "{{vxsndctl_output.stdout | from_json}}"
  when: vxsnd[ansible_hostname] is defined


- name: Validate Service Node Anycast IP
  assert:
    that:
      - configured_vxsnd[anycast] == vxsnd.anycast
  when: vxsnd[ansible_hostname] is defined

- name: Validate Service Node Peers
  assert:
    that:
      - ('{{item}}') in configured_vxsnd[peers]
  with_items: vxsnd[peers]
  when: vxsnd[ansible_hostname] is defined

- name: Validate Correct Service Node Local Address
  assert:
    that:
      - configured_vxsnd[local] == vxsnd[ansible_hostname].local_address
  when: vxsnd[ansible_hostname] is defined
