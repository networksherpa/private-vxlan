---
- name: Get Interface Data
  command: net show interface json
  register: interface_output

- name: Process Interface Data
  set_fact:
    configured_interfaces: "{{interface_output.stdout | from_json}}"

# This set_fact may not be required, however, I was unable to figure out
# How to get this filter to work in the following assert.
# the vars do not include a mask.
# the output returned by net show does.
- name: Create Loopback IP and Mask
  set_fact:
    var_loopback_mask: "{{[l3_interfaces.loopback[ansible_hostname].ipv4, '/32']|join('')}}"

- name: Create Anycast IP and Mask (when required)
  set_fact:
    var_anycast_mask: "{{[l3_interfaces.loopback[ansible_hostname].anycast, '/32']|join('')}}"
  when: l3_interfaces.loopback[ansible_hostname].anycast is defined

- name: Create Peerlink IP and Mask (when required)
  set_fact:
    # Note the Peerlink is assumed to have /30 Mask
    # If the mask is not /30, the assertion will fail
    var_peerlink_mask: "{{[l3_interfaces.peerlink[ansible_hostname], '/30']|join('')}}"
  when: l3_interfaces.peerlink[ansible_hostname] is defined

- name: Validate the Loopback IP is configured
  assert:
    that:
      - var_loopback_mask in configured_interfaces["lo"]["iface_obj"]["ip_address"]["allentries"]

- name: Validate the Anycast IP is configured (when required)
  assert:
    that:
      - var_anycast_mask in configured_interfaces["lo"]["iface_obj"]["ip_address"]["allentries"]
  when: l3_interfaces.loopback[ansible_hostname].anycast is defined

- name: Validate the Peerlink IP is configured (when required)
  assert:
    that:
      # Note, this assumes peerlink.4094
      # The subinterface owns the IP and we enforce the sub must be .4094
      - var_peerlink_mask in configured_interfaces["peerlink.4094"]["iface_obj"]["ip_address"]["allentries"]
  when: l3_interfaces.peerlink[ansible_hostname] is defined
